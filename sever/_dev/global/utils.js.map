{"version":3,"sources":["../../app/global/utils.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;AAGO,IAAM,0BAAS,SAAT,MAAS,GAAM;AACxB,QAAI,SAAS,EAAb;AAAA,QAAiB,iBAAjB;;AADwB,+BAGhB,CAHgB;AAIpB,YAAI,OAAO,OAAO,IAAP,CAAY,WAAU,CAAV,CAAZ,CAAX;AACA,aAAK,OAAL,CAAa,UAAS,IAAT,EAAe;AAAC,mBAAO,IAAP,IAAe,KAAK,CAAL,EAAQ,IAAR,CAAf;AAA6B,SAA1D;AALoB;;AAGxB,SAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,KAAK,MAAxB,EAAgC,GAAhC,EAAqC;AAAA,cAA7B,CAA6B;AAGpC;;AAED,WAAO,MAAP;AACH,CATM;;;AAYA,IAAM,gCAAY,SAAZ,SAAY,CAAC,GAAD,EAAM,GAAN,EAAc;AACnC,QAAG,OAAO,GAAP,KAAe,WAAlB,EAA+B;AAC3B,YAAI,IAAJ,CAAS,EAAC,MAAM,KAAP,EAAc,KAAK,MAAnB,EAAT;AACH,KAFD,MAEM;AACF,YAAI,IAAJ,GAAW,IAAX;AACA,YAAI,GAAJ,GAAU,IAAV;AACA,YAAI,IAAJ,CAAS,GAAT;AACH;AACJ,CARM;;;AAWA,IAAM,0CAAiB,SAAjB,cAAiB,MAAO;AACjC,QAAG,CAAC,GAAJ,EAAS,MAAM,EAAN;AACT,QAAI,MAAM,wCAAV;AAAA,QAAoD,SAAS,EAA7D;AACA,SAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,GAAnB,EAAwB,GAAxB,EAA6B;AACzB,YAAI,OAAO,IAAI,CAAC,CAAC,KAAK,MAAL,KAAgB,EAAjB,EAAqB,OAArB,CAA6B,CAA7B,CAAL,CAAX;AACA,kBAAU,OAAO,IAAP,GAAc,GAAxB;AACH;AACD,WAAO,MAAP;AACH,CARM;;;AAWA,IAAM,kDAAqB,SAArB,kBAAqB,MAAO;AACrC,QAAG,CAAC,IAAI,GAAR,EAAa,OAAO,QAAQ,GAAR,CAAY,2CAAZ,CAAP;AACb,QAAI,OAAO,IAAI,GAAf;AACA,WAAO,IAAI,GAAX;;AAEA,QAAI,QAAQ,OAAO,IAAP,CAAY,GAAZ,CAAZ;AACA,UAAM,OAAN,CAAc,UAAS,IAAT,EAAe,KAAf,EAAsB;AAChC,YAAI,UAAU,QAAQ,GAAR,GAAc,GAA5B;AACA,qBAAW,OAAX,GAAqB,IAArB,SAA6B,IAAI,IAAJ,CAA7B;AACH,KAHD;;AAKA,WAAO,IAAP;AACH,CAZM","file":"utils.js","sourcesContent":["import moment from \"moment\"\nimport request from \"request\"\n\n// 合并对象\nexport const extend = () => {\n    var result = {}, args = arguments\n\n    for(let i = 0; i < args.length; i++) {\n        let keys = Object.keys(arguments[i])\n        keys.forEach(function(item) {result[item] = args[i][item]})\n    }\n\n    return result\n};\n\n// 构造返回的json数据\nexport const jsonWrite = (res, ret) => {\n    if(typeof ret === \"undefined\") {\n        res.json({succ: false, msg: \"操作失败\"})\n    }else {\n        ret.succ = true;\n        ret.msg = \"成功\";\n        res.json(ret)\n    }\n};\n\n// 获取随机字符串\nexport const fetchRandomStr = len => {\n    if(!len) len = 32\n    var str = \"00123456789abcdefghigklmnopqrstuvwxyzz\", result = \"\";\n    for(let i = 0; i < len; i++) {\n        let item = str[+(Math.random() * 38).toFixed(0)];\n        result += item ? item : \"x\";\n    }\n    return result\n};\n\n// 拼接url\nexport const fetchUrlwithParams = obj => {\n    if(!obj.url) return console.err(\"constructParams needs obj.url is a string\");\n    var _url = obj.url;\n    delete obj.url;\n\n    var _keys = Object.keys(obj);\n    _keys.forEach(function(item, index) {\n        var _symbol = index ? \"&\" : \"?\";\n        _url += `${_symbol}${item}=${obj[item]}`\n    })\n\n    return _url\n};\n"]}
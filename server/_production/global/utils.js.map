{"version":3,"sources":["../../app/global/utils.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;AAGO,IAAM,0BAAS,SAAT,MAAS,GAAM;AAC1B,MAAI,SAAS,EAAb;AAAA,MAAiB,iBAAjB;;AAD0B,6BAGlB,CAHkB;AAIxB,QAAI,OAAO,OAAO,IAAP,CAAY,WAAU,CAAV,CAAZ,CAAX;AACA,SAAK,OAAL,CAAa,UAAS,IAAT,EAAe;AAAC,aAAO,IAAP,IAAe,KAAK,CAAL,EAAQ,IAAR,CAAf;AAA6B,KAA1D;AALwB;;AAG1B,OAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,KAAK,MAAxB,EAAgC,GAAhC,EAAqC;AAAA,UAA7B,CAA6B;AAGpC;;AAED,SAAO,MAAP;AACD,CATM;;;AAYA,IAAM,gCAAY,SAAZ,SAAY,CAAC,GAAD,EAAM,GAAN,EAAc;AACrC,MAAG,CAAC,GAAJ,EAAS,MAAM,EAAN;AACT,MAAG,IAAI,IAAJ,KAAa,SAAhB,EAA2B,IAAI,IAAJ,GAAW,KAAX;AAC3B,MAAI,GAAJ,CAAQ;AACN,oBAAgB,kBADV;AAEN,qBAAiB;AAFX,GAAR;AAIA,MAAI,IAAJ,CAAS,GAAT;AACD,CARM;;;AAWA,IAAM,0CAAiB,SAAjB,cAAiB,MAAO;AACnC,MAAG,CAAC,GAAJ,EAAS,MAAM,EAAN;AACT,MAAI,MAAM,wCAAV;AAAA,MAAoD,SAAS,EAA7D;AACA,OAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,GAAnB,EAAwB,GAAxB,EAA6B;AAC3B,QAAI,OAAO,IAAI,CAAC,CAAC,KAAK,MAAL,KAAgB,EAAjB,EAAqB,OAArB,CAA6B,CAA7B,CAAL,CAAX;AACA,cAAU,OAAO,IAAP,GAAc,GAAxB;AACD;AACD,SAAO,MAAP;AACD,CARM;;;AAWA,IAAM,kDAAqB,SAArB,kBAAqB,MAAO;AACvC,MAAG,CAAC,IAAI,GAAR,EAAa,OAAO,QAAQ,GAAR,CAAY,2CAAZ,CAAP;AACb,MAAI,OAAO,IAAI,GAAf;AACA,SAAO,IAAI,GAAX;;AAEA,MAAI,QAAQ,OAAO,IAAP,CAAY,GAAZ,CAAZ;AACA,QAAM,OAAN,CAAc,UAAS,IAAT,EAAe,KAAf,EAAsB;AAClC,QAAI,UAAU,QAAQ,GAAR,GAAc,GAA5B;AACA,iBAAW,OAAX,GAAqB,IAArB,SAA6B,IAAI,IAAJ,CAA7B;AACD,GAHD;;AAKA,SAAO,IAAP;AACD,CAZM;;AAcA,IAAM,4CAAkB,SAAlB,eAAkB,MAAO;AACpC,MAAI,MAAM,IAAI,KAAJ,CAAU,GAAV,CAAV;AACA,MAAI,SAAS,EAAb;;AAEA,MAAI,OAAJ,CAAY,gBAAQ;AAClB,QAAM,IAAI,KAAK,KAAL,CAAW,GAAX,CAAV;AACA,WAAO,EAAE,CAAF,CAAP,IAAe,EAAE,CAAF,CAAf;AACD,GAHD;;AAKA,SAAO,MAAP;AACD,CAVM;;AAYA,IAAM,oCAAc,SAAd,WAAc,OAAQ;AACjC,MAAM,WAAW,kBAAI,OAAO,gBAAX,CAAjB;AACA,MAAM,OAAO;AACX,cAAU,QADC;AAEX,iBAAa,kBAAI,WAAW,4BAAf;AAFF,GAAb;AAIA,SAAO,IAAP;AACD,CAPM","file":"utils.js","sourcesContent":["import moment from \"moment\"\nimport request from \"request\"\nimport md5 from \"md5\"\n\n// 合并对象\nexport const extend = () => {\n  var result = {}, args = arguments\n\n  for(let i = 0; i < args.length; i++) {\n    let keys = Object.keys(arguments[i])\n    keys.forEach(function(item) {result[item] = args[i][item]})\n  }\n\n  return result\n};\n\n// 构造返回的json数据\nexport const jsonWrite = (res, ret) => {\n  if(!ret) ret = {}\n  if(ret.succ === undefined) ret.succ = false\n  res.set({\n    \"Content-Type\": \"application/json\",\n    \"Cache-Control\": \"no-cache\",\n  })\n  res.json(ret)\n}\n\n// 获取随机字符串\nexport const fetchRandomStr = len => {\n  if(!len) len = 32\n  var str = \"00123456789abcdefghigklmnopqrstuvwxyzz\", result = \"\";\n  for(let i = 0; i < len; i++) {\n    let item = str[+(Math.random() * 38).toFixed(0)];\n    result += item ? item : \"x\";\n  }\n  return result\n};\n\n// 拼接url\nexport const fetchUrlwithParams = obj => {\n  if(!obj.url) return console.err(\"constructParams needs obj.url is a string\");\n  var _url = obj.url;\n  delete obj.url;\n\n  var _keys = Object.keys(obj);\n  _keys.forEach(function(item, index) {\n    var _symbol = index ? \"&\" : \"?\";\n    _url += `${_symbol}${item}=${obj[item]}`\n  })\n\n  return _url\n};\n\nexport const getParamFromStr = str => {\n  let arr = str.split(\"&\")\n  let result = {}\n\n  arr.forEach(item => {\n    const o = item.split(\"=\")\n    result[o[0]] = o[1]\n  })\n\n  return result\n};\n\nexport const getNameHash = name => {\n  const nameHash = md5(name + \"user_name_hash\")\n  const hash = {\n    nameHash: nameHash,\n    sessionHash: md5(nameHash + \"woolsontashia_session_hash\"),\n  }\n  return hash\n}\n"]}